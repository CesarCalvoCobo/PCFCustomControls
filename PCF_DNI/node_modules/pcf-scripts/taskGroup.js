"use strict";
// Copyright (C) Microsoft Corporation. All rights reserved.
Object.defineProperty(exports, "__esModule", { value: true });
const manifestTypes_task_1 = require("./tasks/manifestTypes.task");
const validate_task_1 = require("./tasks/validate.task");
const compile_task_1 = require("./tasks/compile.task");
const output_task_1 = require("./tasks/output.task");
const clean_task_1 = require("./tasks/clean.task");
const start_task_1 = require("./tasks/start.task");
exports.standardTaskGroups = {
    build: {
        default: [
            new validate_task_1.ValidateManifestTask,
            new validate_task_1.ValidateSourceTask,
            new manifestTypes_task_1.GenerateManifestTypesTask,
            new compile_task_1.CompileTask,
            new output_task_1.CreateOutputTask
        ]
    },
    rebuild: {
        default: [
            new clean_task_1.CleanTask,
            new validate_task_1.ValidateManifestTask,
            new validate_task_1.ValidateSourceTask,
            new manifestTypes_task_1.GenerateManifestTypesTask,
            new compile_task_1.CompileTask,
            new output_task_1.CreateOutputTask
        ]
    },
    clean: {
        default: [
            new clean_task_1.CleanTask
        ]
    },
    start: {
        default: [
            new validate_task_1.ValidateManifestTask,
            new validate_task_1.ValidateSourceTask,
            new manifestTypes_task_1.GenerateManifestTypesTask,
            new compile_task_1.CompileTask,
            new output_task_1.CreateOutputTask,
            new start_task_1.StartHarnessTask(false)
        ],
        skipBuild: [
            new start_task_1.StartHarnessTask(false)
        ],
        watch: [
            new validate_task_1.ValidateManifestTask,
            new validate_task_1.ValidateSourceTask,
            new manifestTypes_task_1.GenerateManifestTypesTask,
            new compile_task_1.CompileTaskForWatch,
            new output_task_1.CreateOutputTask,
            new start_task_1.StartHarnessTask(true)
        ]
    }
};
